# Argon rules
rules:
  - id: code-generic-credential
    title: Code Generic Credential
    category: Code Generic
    severity: HIGH
    regex: (?i)\[?["']?[.\w\-]*(dbpasswd|dbhost|token|secret|password|pwd)[\w\-]*["']?\]?\s*[=:]\s*['"](?P<secret>.{5,160})['"]
    secret-group-name: secret
    keywords:
      - dbpasswd
      - dbhost
      - token
      - secret
      - password
      - pwd
    exclude-block:
        description: Exclude blocks
        regexes: 
         - (?i)enum\s+\w+\s*\{[^\}]*\}                                    # enum { ... }
         - (?i)(\w*(mapping|mapper|resolve|parse|names)\w*)\s*[:=]\s*\{[^\}]+\} # mapping, mapper, resolve, parse { ... }
    allow-rules:
      - id: code-generic-credential-allowed-paths
        title: Code Generic Credential Allowed Paths
        path: (?i)\.(x(a)?ml|config|conf|\w*cfg|dtsx|resx|ini|properties)$
      - id: code-generic-credential-allowed-keys
        title : Code Generic Credential Allowed Keys
        regex: (?i)(prefix|suffix|default|field|key|variable|flag|prop|param|msg|message|error|name|forgot|empty|chars|placeholder)[\w\-]*["']?\]?\s*[=:]
      - id: code-generic-credential-allowed-values
        title: Code Generic Credential Allowed Values
        regex: (?i)[=:]\s*\S*(sample|example|false|true|some|here|default|foo|bar|ngModel|your|not(a?secret|real)|insert|invalid|test)
      - id: code-generic-credential-allowed-encrypted    # token = encrypted value
        title: Code Generic Credential Allowed Encrypted
        regex: (?i)ENC\[
      - id: code-generic-credential-allowed-1            # token = "${{aaaa}}"
        title: Code Generic Credential Allowed 1
        regex: (?i)[=:]\s*["']\s*\$(\{{1,2}).*?(\}{1,2})["']
      - id: code-generic-credential-allowed-2            # token = "a.b"
        title: Code Generic Credential Allowed 2
        regex: (?i)[=:]\s*['"][\.\/\\]?[a-z0-9]+([\.\/\\][a-z0-9]+)+["']
      - id: code-generic-credential-allowed-3            # [something.token] : "value"
        title: Code Generic Credential Allowed 3
        regex: (?i)^\s*\[.*\]\s*[=:]
      - id: code-generic-credential-allowed-4            # token = "@Model.Property"
        title: Code Generic Credential Allowed 4
        regex: (?i)[=:]\s*["']@[\w\-]+(\.[\w\-]+)+?["']
      # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
      # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
      # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google

  - id: code-generic-credential-dbname  # dbname = '*****' | dbname = "*****" | a[dbname] = '*****' | a['dbname'] = '*****'
    title: Code Generic Credential DB Name
    category: Code Generic
    severity: HIGH
    regex: (?i)\[?["']?[.\w\-]*(dbname)[\w\-]*["']?\]?\s*[=:]\s*['"](?P<secret>.{5,160})['"]
    secret-group-name: secret
    keywords:
      - dbname
    exclude-block:
        description: Exclude enums
        regexes: 
         - (?i)enum\s+\w+\s*\{[^\}]*\}                                    # enum { ... }
         - (?i)(\w*(mapping|mapper|resolve|parse)\w*)\s*[:=]\s*\{[^\}]+\} # mapping, mapper, resolve, parse { ... }
    allow-rules:
      - id: code-generic-credential-dbname-allowed-paths
        title: Code Generic Credential DB Name Allowed Paths
        path: (?i)\.(x(a)?ml|config|conf|\w*cfg|dtsx|resx|ini|properties)$
      - id: code-generic-credential-dbname-allowed-keys
        title : Code Generic Credential DB Name Allowed Keys
        regex: (?i)(prefix|suffix|default|field|key|variable|flag|prop|param|msg|message|error|empty|chars|placeholder)[\w\-]*["']?\]?\s*[=:]
      - id: code-generic-credential-dbname-allowed-values
        title: Code Generic Credential DB Name Allowed Values
        regex: (?i)[=:]\s*\S*(sample|example|false|true|some|here|default|foo|bar|ngModel|your|not(a?secret|real)|insert|invalid|test)
      - id: code-generic-credential-dbname-allowed-encrypted    # token = encrypted value
        title: Code Generic Credential DB Name Allowed Encrypted
        regex: (?i)ENC\[
      - id: code-generic-credential-allowed-1            # token = "${{aaaa}}"
        title: Code Generic Credential Allowed 1
        regex: (?i)[=:]\s*["']\s*\$(\{{1,2}).*?(\}{1,2})["']
      - id: code-generic-credential-allowed-2            # token = "a.b"
        title: Code Generic Credential Allowed 2
        regex: (?i)[=:]\s*['"][\.\/\\]?[a-z0-9]+([\.\/\\][a-z0-9]+)+["']
      - id: code-generic-credential-dbname-allowed-3            # [something.token] : "value"
        title: Code Generic Credential DB Name Allowed 3
        regex: (?i)^\s*\[.*\]\s*[=:]
      - id: code-generic-credential-dbname-allowed-4            # token = "@Model.Property"
        title: Code Generic Credential DB Name Allowed 4
        regex: (?i)[=:]\s*["']@[\w\-]+(\.[\w\-]+)+?["']
      # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
      # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
      # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google
  
  - id: code-generic-credential-api-key    # apikey = '*****' | secretkey = "*****" | a[api_key] = '*****' | a['api-key'] = '*****'
    title: Code Generic Credential API Key  
    category: Code Generic
    severity: HIGH
    regex: (?i)\[?["']?[.\w\-]*((api|private|secret|auth)[_-]?key)[\w\-]*["']?\]?\s*[=:]\s*['"](?P<secret>.{5,160})['"]
    secret-group-name: secret
    keywords:
      - api
      - private
      - secret
      - auth
    exclude-block:
        description: Exclude enums
        regexes: 
         - (?i)enum\s+\w+\s*\{[^\}]*\}                                    # enum { ... }
         - (?i)(\w*(mapping|mapper|resolve|parse)\w*)\s*[:=]\s*\{[^\}]+\} # mapping, mapper, resolve, parse { ... }
    allow-rules:
      - id: code-generic-credential-api-key-allowed-paths
        title: Code Generic Credential API Key Allowed Paths
        path: (?i)\.(x(a)?ml|config|conf|\w*cfg|dtsx|resx|ini|properties)$
      - id: code-generic-credential-api-key-allowed-keys
        title : Code Generic Credential API Key Allowed Keys
        regex: (?i)(prefix|suffix|default|field|variable|flag|prop|param|msg|message|error|name|forgot|empty|chars|key[_-]key|placeholder)[\w\-]*["']?\]?\s*[=:]
      - id: code-generic-credential-api-key-allowed-values
        title: Code Generic Credential API Key Allowed Values
        regex: (?i)[=:]\s*\S*(sample|example|false|true|some|here|default|foo|bar|ngModel|your|not(a?secret|real)|insert|invalid|test)
      - id: code-generic-credential-api-key-allowed-encrypted    # token = encrypted value
        title: Code Generic Credential API Key Allowed Encrypted
        regex: (?i)ENC\[
      - id: code-generic-credential-allowed-1            # token = "${{aaaa}}"
        title: Code Generic Credential Allowed 1
        regex: (?i)[=:]\s*["']\s*\$(\{{1,2}).*?(\}{1,2})["']
      - id: code-generic-credential-allowed-2            # token = "a.b"
        title: Code Generic Credential Allowed 2
        regex: (?i)[=:]\s*['"][\.\/\\]?[a-z0-9]+([\.\/\\][a-z0-9]+)+["']
      - id: code-generic-credential-api-key-allowed-3            # [something.token] : "value"
        title: Code Generic Credential API Key Allowed 3
        regex: (?i)^\s*\[.*\]\s*[=:]
      - id: code-generic-credential-api-key-allowed-4            # token = "@Model.Property"
        title: Code Generic Credential API Key Allowed 4
        regex: (?i)[=:]\s*["']@[\w\-]+(\.[\w\-]+)+?["']
      # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
      # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
      # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google

  - id: config-generic-credential        # XML <secret>********<\secret>
    title: Generic Config Credential
    category: Config Generic
    severity: HIGH
    regex: (?i)<[^"]*(password|pwd|passwd|secret|token)[^>]*>(?P<secret>.{5,160}?)<
    secret-group-name: secret
    keywords:
      - password
      - pwd
      - passwd
      - secret
      - token
    path: '(?i)\.(x(a)?ml|config|conf|\w*cfg|dtsx|resx|ini|properties)$'
    allow-rules:
      - id: config-generic-credential-allowed-keys  # <defaultpassword>********<\defaultpassword>
        title : Config Generic Credential Allowed Keys
        regex: '(?i)<[^"]*(prefix|suffix|field|enable|header|default|empty|variable|flag|prop|param|msg|message|error|name)[^>]*>'
      - id: config-generic-credential-allowed-values  # <sometag>foo<\sometag>
        title: Config Generic Credential Allowed Values
        regex: "[^<]*(sample|example|false|true|some|here|default|foo|bar|your|ConnectionString|not(a?secret|real)|insert|invalid|test).*?<"
      - id: config-generic-credential-allowed-encrypted    # <secret>encrypted value<\secret>
        title: Config Generic Credential Allowed Encrypted
        regex: (?i)ENC\[
      - id: config-generic-credential-allowed-1            # <secret>${variable}<secret>
        title: Config Generic Credential Allowed 1
        regex: '>\$\{.*?\}<'
      # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
      # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
      # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google
  

  - id: config-generic-credential-2
    title: Generic Config Credential 2                      # XML <SomeTag name="dbpasswd|token|api_key|apikey|secret|password|pass" value="******">
    category: Config Generic
    severity: HIGH
    regex: (?i)<[^>]*?(name|key)\s*=\s*"[^"]*?(dbpasswd|token|secret|password|((api|private)[_-]?key)).*?"[^>]*?value\s*=\s*"(?P<secret>[^"]{5,160})".*?>
    secret-group-name: secret
    keywords:
      - dbpasswd
      - token
      - secret
      - password
      - api
      - private
    path: (?i)\.(x(a)?ml|config|conf|\w*cfg|dtsx|resx|ini|properties)$
    allow-rules:
      - id: config-generic-credential-2-allowed-keys  # < key="*prefix|suffix|field|key|..." >
        title : Config Generic Credential 2 Allowed Keys
        regex: '(?i)(name|key)\s*=\s*"[^"]*?(prefix|suffix|field|enable|header|default|empty|variable|flag|prop|param|msg|message|error|name|test).*?"'
      - id: config-generic-credential-2-allowed-values  # < value="*sample|examplel|..." >
        title: Config Generic Credential 2 Allowed Values
        regex: 'value\s*=\s*"[^"]*(sample|example|false|true|some|here|default|foo|bar|your|ConnectionString|not(a?secret|real)|insert|invalid|test).*?"'
      - id: config-generic-credential-2-allowed-encrypted    # <name="secret" value="encrypted value"><\secret>
        title: Config Generic Credential 2 Allowed Encrypted
        regex: (?i)ENC\[                                  
      # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
      # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
      # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google

  - id: env-generic-credential
    title: Env Generic Credential
    category: Env Generic
    severity: HIGH
    regex: (?i)(accesstoken|access_token|dbpasswd|dbuser|dbname|dbhost|secret|password|user|hostname|pwd|auth|((api|private)[_-]?key))\w*\s*=\s*('|")?(?P<secret>.{5,160})('|")?
    secret-group-name: secret
    keywords:
      - accesstoken
      - access_token
      - dbpasswd
      - dbuser
      - dbname
      - dbhost
      - secret
      - password
      - user
      - hostname
      - pwd
      - auth
      - api
      - private
    path: (.*?)(\.env|gradle\.properties)$
    allow-rules:
      - id: env-generic-credential-encrypted
        title: Env Generic Credential Encrypted
        regex: (?i)ENC\[
      - id: env-generic-credential-allowed-values
        title: Env Generic Credential Allowed Values
        regex: (?i)=\s*('|")?(https?|sample|example|false|true|some|here|default|foo|bar|ngModel|your|not(a?secret|real)|insert|invalid|test)('|")?
      - id: env-generic-credential-allowed-empty-value  # =************* / ='**************'
        title: Env Generic Credential Allowed Empty Value
        regex: =\s*('|")?\*{4,160}('|")?
    # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
    # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
    # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google
  
  - id: url-with-credentials
    title: URL With Credentials
    category: URL With Credentials
    severity: HIGH
    regex: '[\w\+]+?:\/\/[\w_\-@\.]+?:(?P<secret>[0-9a-zA-Z-_\/+!{}\/=]+?)@.+?\..+'     # http://user:password@.example.com
    secret-group-name: secret
    allow-rules:
      - id: env-generic-credential-allowed-encrypted
        title: Env Generic Credential Allowed Encrypted
        regex: (?i)ENC\[
      - id: env-generic-credential-allowed-values      # :password@example.com
        title: Env Generic Credential Allowed Values
        regex: ':([0-9a-zA-Z-_\/+!{}\/=]+?)@(example)+?\..+'
  # '''xox[baprs]-([0-9a-zA-Z]{10,48})'''                                   # slack
  # '''(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}''' # aws
  # '''AIza[0-9A-Za-z\\-_]{35}'''                                           # google

# Global allowlist
allow-rules: 
  - id: allowed-file-extensions
    title: Allowed File Extensions
    path: (package\.json.*|\.pom\..*|ivy\..*\.[xi]ml|\.d\.ts)$
  - id: allow-paths
    title: Allowed Paths
    path: (^\.idea|^\.next|[\\\/]report[\\\/]|[\\\/]types[\\\/])
  - id: allow-spec-files
    title: Allow Spec Files
    path: ([.-]spec\.(ts|tsx|js|jsx))$
  - id: allow-java-history-paths
    title: Allow Java History Paths
    path: ^\.history.*
  - id: allow-java-m2-gradle
    title: Allow Java M2
    path: ^(\.m2|\.gradle)
  - id: allow-python-venv
    title: Allow Python Venv Paths
    path: ([\\\/]|^)?venv
  - id: allow-python-site-packages
    title: Allow Python Site Packages
    path: ([\\\/]|^)?lib[\\\/]python[\w\.]*?[\\\/]site-packages
  - id: allow-python-gsutil
    title: Allow Python Gsutil Paths
    path: ([\\\/]|^)?gsutil[\\\/]third_party[\\\/]
  - id: allow-wordpress-plugins
    title: Allow WordPress Plugins
    path: ([\\\/]|^)?wp-content[\\\/]plugins[\\\/]
  - id: allow-ruby-bundly
    title: Allow Ruby Bundly
    path: ([\\\/]|^)?bundle[\\\/]lib[\\\/]ruby[\\\/]
  - id: allow-examples
    title: Allow Examples
    path: ([\\\/]|^)?(example|sample|mock)s?[\\\/]
  - id: allow-gitleaks-toml
    title: Allow Gitleaks Toml
    path: gitleaks.toml$